% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coclustering.R
\name{subsample_pairwise_aris}
\alias{subsample_pairwise_aris}
\title{Calculate pairwise adjusted Rand indices across subsamples of data}
\usage{
subsample_pairwise_aris(
  subsample_solutions,
  return_raw_aris = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{subsample_solutions}{A list of containing cluster solutions from
distinct subsamples of the data. This object is generated by the function
\code{batch_snf_subsamples()}.}

\item{return_raw_aris}{Whether the ARI matrix used to calculate the average
ARI across subsamples should be returned.}

\item{verbose}{If TRUE, output time remaining estimates to console.}
}
\value{
If return_raw_aris is FALSE, this function will return
}
\description{
Calculate pairwise adjusted Rand indices across subsamples of data
}
\examples{
# my_dl <- data_list(
#     list(subc_v, "subcortical_volume", "neuroimaging", "continuous"),
#     list(income, "household_income", "demographics", "continuous"),
#     list(pubertal, "pubertal_status", "demographics", "continuous"),
#     uid = "unique_id"
# )
# 
# sc <- snf_config(my_dl, n_solutions = 5, max_k = 40)
# 
# sol_df <- batch_snf(my_dl, sc)
# 
# my_dl_subsamples <- subsample_dl(
#     my_dl,
#     n_subsamples = 20,
#     subsample_fraction = 0.85
# )
# 
# batch_subsample_results <- batch_snf_subsamples(
#     my_dl_subsamples,
#     sc,
#     verbose = TRUE
# )
# 
# subsample_cluster_solutions <- batch_subsample_results[["cluster_solutions"]]
# 
# pairwise_aris <- subsample_pairwise_aris(
#     subsample_cluster_solutions,
#     return_raw_aris = TRUE,
#     verbose = TRUE
# )
# 
# coclustering_results <- calculate_coclustering(
#     subsample_cluster_solutions,
#     sol_df,
#     verbose = TRUE
# )
# 
# coclustering_results$"cocluster_summary"
# 
# cocluster_dfs <- coclustering_results$"cocluster_dfs"
# 
# cocluster_density(cocluster_dfs[[1]])
# 
# cocluster_heatmap(
#     cocluster_dfs[[1]],
#     dl = my_dl,
#     top_hm = list(
#         "Income" = "household_income",
#         "Pubertal Status" = "pubertal_status"
#     ),
#     annotation_colours = list(
#         "Pubertal Status" = colour_scale(
#             c(1, 4),
#             min_colour = "black",
#             max_colour = "purple"
#         ),
#         "Income" = colour_scale(
#             c(0, 4),
#             min_colour = "black",
#             max_colour = "red"
#         )
#     )
# )
}
